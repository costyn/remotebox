#ifndef OLED_DISPLAY_H
#define OLED_DISPLAY_H

#include <Arduino.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <qrcode.h>
#include <ArduinoWebsockets.h>
// #include "encoders.h"

/*
    For the STEMMA QT cables, we follow the Qwiic convention:

    Black for GND
    Red for V+
    Blue for SDA
    Yellow for SCL
*/


/////////////////// DISPLAY STUFF /////////////////////


#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
#define SCREEN_ADDRESS 0x3D ///< See datasheet for Address; 0x3D for 128x64, 0x3C for 128x32

const unsigned char icon_link_on[] PROGMEM = {
    // 'link_FILL0_wght400_GRAD0_opsz48, 20x20px
	0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 
	0xff, 0xf0, 0xf0, 0x60, 0xf0, 0xef, 0xff, 0x70, 0xdf, 0xff, 0xb0, 0xde, 0x07, 0xb0, 0xde, 0x07, 
	0xb0, 0xdf, 0xff, 0xb0, 0xef, 0xff, 0x70, 0xf0, 0x60, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 
	0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0
};

const unsigned char icon_link_off [] PROGMEM = {
	// 'link_off_FILL0_wght400_GRAD0_opsz48, 20x20px
	0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0, 0xdf, 0xff, 0xf0, 0xef, 0xff, 0xf0, 0xf7, 
	0xff, 0xf0, 0xf3, 0xe0, 0xf0, 0xed, 0xfe, 0x70, 0xde, 0xff, 0xb0, 0xde, 0x77, 0xb0, 0xde, 0x37, 
	0xb0, 0xdf, 0xdf, 0xb0, 0xef, 0xef, 0x70, 0xf0, 0x76, 0xf0, 0xff, 0xfb, 0xf0, 0xff, 0xfd, 0xf0, 
	0xff, 0xfe, 0xf0, 0xff, 0xff, 0x70, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xf0
};

////////// Function Prototypes ////////////////////////

void oledSetup();
void drawCentreString(const String& buf, int y);
void testdrawchar(void);
void displayParameter(String encoderName, int value, boolean confirmWithClick);
void drawQrCode(const char* qrStr, const char* lines[]);

////////////// Global Variable /////////////////////

static Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
static QRCode qrCode;

/////////// Other Globals ///////////////
extern websockets::WebsocketsClient client;

#endif